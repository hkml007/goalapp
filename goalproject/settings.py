"""
Django settings for goalproject project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-mya8bk)#fy!=j=l5h2_5qz#22*o8o3@g*pr*na%f6q^a5zh)j^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_celery_beat',
    'goalapp',
    'goalapp.templatetags.get_item',
    'mptt',
    'social_django',
    

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'social_django.middleware.SocialAuthExceptionMiddleware',
    'goalapp.login_required_middleware.LoginRequiredMiddleware',
    'goalapp.cache_middleware.NoCacheMiddleware',
]

ROOT_URLCONF = 'goalproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                
              
            ],
        },
    },
]

WSGI_APPLICATION = 'goalproject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True   


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# Email settings for milestone reminders
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'  # For development only
DEFAULT_FROM_EMAIL = 'fathimashaji661@gmail.com'
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'fathimashaji661@gmail.com'  # ðŸ‘ˆ your Gmail
EMAIL_HOST_PASSWORD = 'tjxz xctq ypwd hjjj'  # ðŸ‘ˆ not your main password if 2FA is on
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# settings.py
VAPID_PUBLIC_KEY  = "<BAz7vdO...your-public-key...kXdQlYA>"
VAPID_PRIVATE_KEY = "<qFvx7D...your-private-key...T4z8Pjw>"
VAPID_CLAIMS      = {"sub": "fathimashaji661@gmail.com.com"}


# 2) Celery beat schedule
from celery.schedules import crontab

CELERY_BEAT_SCHEDULE = {
    'send-due-reminders-every-minute': {
        'task': 'reminders.tasks.send_due_reminders',
        'schedule': crontab(),  # every minute
    },
}

CELERY_TIMEZONE = 'Asia/Kolkata'  # or your preferred timezone


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
    'loggers': {
        '': {
            'handlers': ['console'],
            'level': 'DEBUG',
        },
    },
}



# Media handling (for audio/video files)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Session configuration (add if not present)
SESSION_COOKIE_AGE = 1209600  # 2 weeks
SESSION_SAVE_EVERY_REQUEST = True

# Increase max upload size to 500MB (adjust as needed)
DATA_UPLOAD_MAX_MEMORY_SIZE = 524288000  # 500 MB
FILE_UPLOAD_MAX_MEMORY_SIZE = 524288000
DATA_UPLOAD_MAX_NUMBER_FIELDS = 50000  # Optional: increase if you have many fields

# File upload handling
FILE_UPLOAD_HANDLERS = [
    'django.core.files.uploadhandler.TemporaryFileUploadHandler',
]

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / "static",
]
STATIC_ROOT = BASE_DIR / "staticfiles"


AUTHENTICATION_BACKENDS = (
    'social_core.backends.instagram.InstagramOAuth2',   # For Instagram
    'social_core.backends.facebook.FacebookOAuth2',     # For Facebook
    'social_core.backends.twitter.TwitterOAuth',        # For Twitter (OAuth 1.0a)
    'django.contrib.auth.backends.ModelBackend',
)



SOCIAL_AUTH_INSTAGRAM_KEY = 'your-instagram-client-id'
SOCIAL_AUTH_INSTAGRAM_SECRET = 'your-instagram-client-secret'

SOCIAL_AUTH_FACEBOOK_KEY = 'your-facebook-app-id'
SOCIAL_AUTH_FACEBOOK_SECRET = 'your-facebook-app-secret'

SOCIAL_AUTH_TWITTER_KEY = 'your-twitter-api-key'
SOCIAL_AUTH_TWITTER_SECRET = 'your-twitter-api-secret-key'
